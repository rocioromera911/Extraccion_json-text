import json
from playwright.sync_api import sync_playwright
import time

def extraer_json(page):
    try:
        script_tag = page.locator('//body/div[2]/div/div[1]/div/script')
        json_content = script_tag.text_content()
        return json.loads(json_content)
    except Exception as e:
        print(f"Error al extraer JSON: {e}")
        return None

def extraer_texto_visible(page):
    try:
        return page.inner_text("body")
    except Exception as e:
        print(f"Error al extraer texto visible: {e}")
        return ""

def scrollear_pagina(page, veces=1, espera=2):
    try:
        for i in range(veces):
            print(f"Realizando scroll {i + 1}/{veces}...")
            page.evaluate("window.scrollBy(0, document.body.scrollHeight)")
            time.sleep(espera)
    except Exception as e:
        print(f"Error al scrollear la página: {e}")

def main(url):
    with sync_playwright() as p:
        browser = p.chromium.launch(headless=False)
        context = browser.new_context()
        page = context.new_page()

        try:
            print(f"Navegando a {url}...")
            page.goto(url)

            # Esperar a que la página cargue completamente
            page.wait_for_load_state("load")

            # Esperar tiempo adicional para asegurarse de que todos los datos dinámicos estén cargados
            print("Esperando 5 segundos adicionales para asegurar la carga completa...")
            time.sleep(8)

            # Scrollear la página
            print("Scrolleando la página para cargar más contenido...")
            scrollear_pagina(page, veces=1, espera=2)

            # Recargar la página y esperar nuevamente
            print("Recargando la página para asegurarse de que los datos estén cargados correctamente...")
            page.reload()
            page.wait_for_load_state("load")

            # Esperar tiempo adicional nuevamente
            print("Esperando 3 segundos adicionales después de recargar...")
            time.sleep(8)


            # Llamar a las funciones de extracción
            json_data = extraer_json(page)
            if json_data:
                print("JSON extraído:", json_data)
                with open("Datos.json", "w", encoding="utf-8") as json_file:
                    json.dump(json_data, json_file, ensure_ascii=False, indent=4)
            else:
                print("No se pudo extraer el JSON.")

            texto_visible = extraer_texto_visible(page)
            print("Texto visible extraído:")
            print(texto_visible)
            with open("pagina.txt", "w", encoding="utf-8") as txt_file:
                txt_file.write(texto_visible)

        except Exception as e:
            print(f"Error al procesar la página: {e}")
        finally:
            browser.close()

# Llama a main() pasando el enlace
if __name__ == "__main__":
    enlace = "https://www.vea.com.ar/45491?map=productClusterIds&page=2"
    main(enlace)
